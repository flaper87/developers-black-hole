Title: Ideas worth coding
Date: 2013-04-07 21:55
Author: Flavio Percoco
Tags: community,development,motivation
Slug: ideas-worth-coding

Based on my experience, a really low percentage of projects become something else than just a bunch of code written in a really boring weekend and even a lower percentage go further than `mkdir $PROJECT`.

Ideas are unlimited, they come and go thousands of times per day. Most of them may be a waste of time, others could make sense but certainly the majority of them were already thought or implemented.

In open source, we tend to think that contributing to projects instead of splitting efforts is a better way to give back to the community and that is, becoming part of communities, filing / fixing bugs, writing new code and proposing new ideas. Even though I'm a big fan of open source, I do think that this kind of moral rules should be broken from time to time. Let me explain this a bit better:

From ideas to frustration
=========================

Having new ideas makes us feel great, powerful and innovative. It is always nice to wake up in the morning with great ideas and willing to change the world, then take a cup of coffee sit in front of your laptop, google your ideas and find out that someone already did that and / or the ideas are worthless. #Sarcasm

Because of that, many people feel frustrated and think they "lack of magic" when it comes to finding out new things to do, without realizing there's always space for improvement and that we all deserve to have fun doing what we think worths it.

Frustration brings more frustration and that decreases our will for doing new things and exploring new ideas.

Knowledge comes from experience
===============================

College is nice, full of great experiences, friendships and new contents related to what we chose, eventually. Experience though, teaches us how to apply those things we've learned in the past, when they come handy and what could or could not be worth it. Now, how can we obtain new "Experience Points" without living / experimenting ?

Every time we say no to a new idea / experiment we're saying no to new experience and as such to new knowledge. Regardless the idea is worth it or a complete waste of time, we'll learn something new either from the idea itself, the implementation of it or the success / failure we faced.

Re-Inventing the wheel
======================

Agreed, it is true, working on ideas that were already explored might end up in re-inventing the wheel for the Nth time but, what if your wheel is faster? what if your wheel is prettier? What if your wheel is just as pretty and fast as the existing one but could be implemented using innovative methods?

Maybe re-inventing the wheel will end up in a waste of time and might require more effort than the original version but what if you just want to have fun?

So, What's the point?
=====================

Ask yourself:

* How many micro-frameworks exist out there?
* How many json serializers?
* How many email providers ?
* how many databases?

The point is, If you've a really cool idea and you think that it's worth it then don't stop, it doesn't matter how many implementations exist out there just do it, do researches and try to be better, make sure you're innovative and that you're making the world a better place. Don't worry about being famous, don't worry about how many forks your project has on github, just make sure you're doing it right and spread the word, let people know that you're trying to improve something and / or working on some existing idea.

I'm not a big fan of splitting efforts myself but, there's always a f***ing trade-off for everything so be conscious when you decide what to do and consider all the many differences between contributing and creating from scratch.

At the end
==========

Finding new things to do is as simple as having new ideas, regardless they were already implemented or not. No matter what, make sure you understand the value of ideas, effort and more importantly knowledge. Share, spread and code. Don't be afraid!